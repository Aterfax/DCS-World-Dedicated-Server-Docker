#!/usr/bin/with-contenv bash
# shellcheck shell=bash

# Source the log helper after setting the prefix
log_prefix="s6-init-dcs-auto-installer-updater-oneshot"
source /app/dcs_server/logger_function

# Source DCS Dirs finder helper
# This sets the following variables:
# DCS_saved_games_dir_open_beta
# DCS_saved_games_dir_release
# DCS_saved_games_dir_current
# DCS_install_dir_openbeta
# DCS_install_dir_release
source /app/dcs_server/find_dcs_dirs_function

# Set up error handling
handle_error() {
    local exit_code="$?"
    echo -e "Error occurred (Exit code: $exit_code)"  
    exit "$exit_code"
}
trap handle_error ERR

# Function for autoinstall
autoinstall() {
    sudo -E -u abc /app/dcs_server/wine-dedicated-dcs-automated-installer/dcs-dedicated-server-automatic-installer.sh 
    exit 0
}

# Function for autoupdate
autoupdate() {
    # Believe it or not you can just call the same install command and it will update/validate/install.
    autoinstall
}

install_folder_path="/config/.wine/drive_c/Program Files/Eagle Dynamics"

# Get/set default value for DCSAUTOINSTALL if not already set
DCSAUTOINSTALL="${DCSAUTOINSTALL:-0}"
echo -e "DCSAUTOINSTALL=$DCSAUTOINSTALL" 

# Get/set default value for FORCEREINSTALL if not already set
FORCEREINSTALL="${FORCEREINSTALL:-0}"
echo -e "FORCEREINSTALL=$FORCEREINSTALL" 

# Check if DCSAUTOINSTALL is set to 1 and do so.
if [ "$DCSAUTOINSTALL" -eq 1 ]; then
    echo -e "DCS auto install requested." 
    if [ "$FORCEREINSTALL" -eq 1 ]; then
        # A force reinstall request
        echo -e "Force reinstall requested." 
        # If a previous install is present get rid of it.
        if [ -d "$install_folder_path" ]; then
            echo "Removing detected previous installation." 
            rm -rf "$install_folder_path"
            find /config/Desktop/ -name '*.desktop' ! -name 'Run_DCS_Install.desktop' -delete
            autoinstall
        else
            echo "No previous installation detected." 
            autoinstall
        fi
        exit 0
    fi
    # Not a force reinstall request so just install.
    autoinstall
    exit 0
fi

# If we get here then we must be updating
if [ "$DCSAUTOINSTALL" -eq 1 ]; then
    autoupdate
    exit 0
fi

# We shouldn't really get here
echo "Nothing further to do, exiting." | output_to_log
exit 0


